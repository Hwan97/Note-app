{"ast":null,"code":"import _objectSpread from \"D:\\\\note-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\note-app\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react'; // import { Switch, Route } from 'react-router-dom';\n// import { Home, NotFoundPage } from 'pages';\n\nimport PageTemplate from './common/PageTemplate';\nimport TodoInput from './common/TodoInput';\nimport TodoList from './common/TodoList';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: '',\n      // 인풋 값\n      todos: [{\n        id: 0,\n        text: '아이템 1',\n        done: true\n      }, {\n        id: 1,\n        text: '아이템 2',\n        done: false\n      }]\n    };\n    this.id = 1;\n\n    this.getId = () => {\n      return ++this.id;\n    };\n\n    this.handleChange = e => {\n      const value = e.target.value;\n      this.setState({\n        input: value\n      });\n    };\n\n    this.handleInsert = () => {\n      const _this$state = this.state,\n            todos = _this$state.todos,\n            input = _this$state.input; // 새 데이터 객체 생성\n\n      const newTodo = {\n        text: input,\n        done: false,\n        id: this.getId()\n      };\n      this.setState({\n        todos: [...todos, newTodo],\n        input: ''\n      });\n    };\n\n    this.handleToggle = id => {\n      //id로 배열의 인덱스를 찾는다\n      const todos = this.state.todos; //  todos 현재 state값 가져온다.\n\n      const index = todos.findIndex(todo => todo.id === id); //값을 찾고\n      //찾은 데이터의 done 값을 반전\n\n      const toggled = _objectSpread({}, todos[index], {\n        done: !todos[index].done\n      });\n\n      this.setState({\n        todos: [...todos.slice(0, index), toggled, ...todos.slice(index + 1, todos.length)]\n      });\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          input = _this$state2.input,\n          todos = _this$state2.todos;\n    const handleChange = this.handleChange,\n          handleInsert = this.handleInsert,\n          handleToggle = this.handleToggle;\n    return React.createElement(PageTemplate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(TodoInput, {\n      onChange: handleChange,\n      onInsert: handleInsert,\n      value: input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(TodoList, {\n      todos: todos,\n      onToggle: handleToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\note-app\\src\\components\\App.js"],"names":["React","Component","PageTemplate","TodoInput","TodoList","App","state","input","todos","id","text","done","getId","handleChange","e","value","target","setState","handleInsert","newTodo","handleToggle","index","findIndex","todo","toggled","slice","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import { Switch, Route } from 'react-router-dom';\r\n// import { Home, NotFoundPage } from 'pages';\r\nimport PageTemplate from './common/PageTemplate'\r\nimport TodoInput from './common/TodoInput';\r\nimport TodoList from './common/TodoList';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    input: '', // 인풋 값\r\n\r\n    todos: [\r\n      {id: 0, text: '아이템 1', done: true},\r\n      {id: 1, text: '아이템 2', done: false}\r\n    ]\r\n  }\r\n\r\n  id = 1\r\n  getId = () => {\r\n    return ++this.id;\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { value } = e.target;\r\n    this.setState({\r\n      input: value\r\n    })\r\n  }\r\n  \r\n  handleInsert = () => {\r\n    const { todos, input } = this.state \r\n\r\n    // 새 데이터 객체 생성\r\n\r\n    const newTodo = {\r\n      text: input,\r\n      done: false,\r\n      id : this.getId()\r\n    };\r\n\r\n    this.setState({\r\n      todos : [...todos, newTodo],\r\n      input : ''\r\n    });\r\n  }\r\n\r\n  handleToggle = (id) => {\r\n\r\n    //id로 배열의 인덱스를 찾는다\r\n    const { todos } = this.state;  //  todos 현재 state값 가져온다.\r\n    const index = todos.findIndex( todo => todo.id === id); //값을 찾고\r\n\r\n    //찾은 데이터의 done 값을 반전\r\n\r\n    const toggled = {\r\n      ...todos[index],\r\n      done: !todos[index].done\r\n    };\r\n\r\n  \r\n    this.setState({\r\n    todos: [\r\n      ...todos.slice(0, index),\r\n      toggled,\r\n      ...todos.slice(index + 1, todos.length)\r\n    ]\r\n  });\r\n}\r\n\r\n\r\n  render() {\r\n    const { input, todos } = this.state;\r\n    const {\r\n        handleChange,\r\n        handleInsert,\r\n        handleToggle\r\n    } = this;\r\n\r\n    return (\r\n      <PageTemplate>\r\n       <TodoInput onChange={handleChange} onInsert={handleInsert} value={input}/>\r\n       <TodoList todos={todos} onToggle={handleToggle} ></TodoList>\r\n      </PageTemplate>\r\n    )\r\n  }\r\n}\r\n\r\n  \r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}